{"version":3,"sources":["logo.svg","lib/fabric.js","editor.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","fabric","Canvas","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","inSize","list","n","low","high","inBoundries","size","swap","from","to","first","get","second","set","count","Editor","props","canvas","uploaderRef","createRef","state","layers","List","mounted","activeIndex","addLayers","layer","name","Object","defineProperty","value","changedLayers","push","findKey","l","setState","removeLayer","oldLayers","remove","onShapeSelect","onAddRectangle","rect","Rect","left","top","fill","width","height","objectCaching","stroke","strokeWidth","on","add","setActiveObject","onUploadImage","e","current","click","onUploaderChange","a","target","files","image","Image","fromURL","oImg","scaleX","scaleY","onEditorKeyDown","key","activeObject","getActiveObject","onDragLayer","console","log","handleLayerMovement","direction","stopPropagation","item","itemIndex","indexOf","delete","insert","moveTop","moveBottom","moveUp","moveDown","changedActiveIndex","forEach","index","moveTo","handleLayerClick","renderAll","renderLayers","className","map","onClick","reverse","document","addEventListener","dir","this","initialize","preserveObjectStacking","type","style","display","accept","onChange","ref","VerticalAlignTopOutlined","ArrowUpOutlined","ArrowDownOutlined","VerticalAlignBottomOutlined","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ef581d94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { fabric } from 'fabric'\n\nconst instance = new fabric.Canvas()\n\nexport { instance }\n","import React, { Component, createRef } from 'react'\nimport { instance } from './lib/fabric'\nimport { fabric } from 'fabric'\nimport { List, Stack } from 'immutable'\nimport { \n  VerticalAlignTopOutlined, \n  VerticalAlignBottomOutlined,\n  ArrowUpOutlined,\n  ArrowDownOutlined\n} from '@ant-design/icons'\nimport './editor.css'\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = error => reject(error)\n  })\n}\n\nconst inBoundries = (n, low, high) => n >= low && n <= high\n\nconst inSize = (list, n) => inBoundries(n, 0, list.size - 1)\n\nfunction swap(list, from, to) {\n  if (!inSize(list, from) || !inSize(list, to)) return list\n  const first = list.get(from)\n  const second = list.get(to)\n  return list.set(from, second).set(to, first)\n}\n\nfunction moveTop(list, item) {\n  const itemIndex = list.indexOf(item)\n  if (itemIndex < 0) return list\n  return list.delete(itemIndex).insert(list.size - 1, item)\n}\n\nfunction moveBottom(list, item) {\n  const itemIndex = list.indexOf(item)\n  if (itemIndex < 0) return list\n  return list.delete(itemIndex).insert(0, item)\n}\n\nfunction moveUp(list, item) {\n  const itemIndex = list.indexOf(item)\n  if (itemIndex < 0) return list\n  return swap(list, itemIndex, itemIndex + 1)\n}\n\nfunction moveDown(list, item) {\n  const itemIndex = list.indexOf(item)\n  if (itemIndex < 0) return list\n  return swap(list, itemIndex, itemIndex - 1)\n}\n\nlet count = 0\nexport default class Editor extends Component {\n  canvas = null\n  uploaderRef = createRef(null)\n  state = { layers: List(), mounted: false, activeIndex: -1 }\n\n  constructor(props) {\n    super(props);\n\n    document.addEventListener('keydown', this.onEditorKeyDown)\n  }\n  \n\n  componentDidMount() {\n    console.dir(this.canvas)\n    console.log('instance', instance)\n    instance.initialize(this.canvas, {\n      preserveObjectStacking: true,\n      width: 800,\n      height: 600,\n    })\n    this.setState({ mounted: true })\n    console.log(instance)\n  }\n\n  componentWillUnmount() {\n    this.setState({ mounted: false })\n  }\n\n  addLayers = (layer, name = count++) => {\n    Object.defineProperty(layer, 'name', {\n      value: name\n    })\n    const { layers } = this.state\n    const changedLayers = layers.push(layer)\n    const activeIndex = changedLayers.findKey(l => l.name === name)\n\n    this.setState({\n      activeIndex,\n      layers: changedLayers,\n    })\n  }\n\n  removeLayer = (layer) => {\n    const oldLayers = this.state.layers\n    const layers = oldLayers.remove(oldLayers.findKey(l => l === layer))\n    this.setState({ layers })\n  }\n\n  onShapeSelect = name => {\n    const { layers } = this.state\n    this.setState({ activeIndex: layers.findKey(l => l.name === name) })\n  }\n\n  onAddRectangle = () => {\n    const rect = new fabric.Rect({\n      left: 100,\n      top: 50,\n      fill: 'yellow',\n      width: 200,\n      height: 100,\n      objectCaching: false,\n      stroke: 'lightgreen',\n      strokeWidth: 4,\n    })\n    const name = `rect_${count++}`\n    rect.on('selected', () => this.onShapeSelect(name))\n    instance.add(rect)\n    instance.setActiveObject(rect)\n    this.addLayers(rect, name)\n  }\n\n  onUploadImage = (e) => {\n    this.uploaderRef.current.click()\n  }\n\n  onUploaderChange = async e => {\n    const file = e.target.files[0]\n    const image = await getBase64(file)\n\n    fabric.Image.fromURL(image, oImg => {\n      const name = file.name\n      oImg.set({\n        left: 100,\n        top: 100,\n        scaleX: 0.25,\n        scaleY: 0.25\n      })\n      oImg.on('selected', () => this.onShapeSelect(name))\n      instance.add(oImg)\n      instance.setActiveObject(oImg)\n      this.addLayers(oImg, file.name)\n    })\n  }\n\n  onEditorKeyDown = e => {\n    if (e.key === 'Delete' && this.state.mounted) {\n      const activeObject = instance.getActiveObject()\n      instance.remove(activeObject)\n      this.removeLayer(activeObject)\n    }\n  }\n\n  onDragLayer = e => {\n    console.log('onDragLayer', e);\n  }\n\n  handleLayerMovement = (direction) => e => {\n    console.log('onLayerMove', e);\n    // e.preventDefault()\n    e.stopPropagation()\n    const { layers, activeIndex } = this.state\n    const layer = layers.get(activeIndex)\n    const changedLayers = \n      direction === 'top' ? moveTop(layers, layer)\n        : direction === 'bottom' ? moveBottom(layers, layer)\n          : direction === 'up' ? moveUp(layers, layer)\n            : direction === 'down' ? moveDown(layers, layer)\n              : layers\n    \n    console.log('change direction', direction)\n    const changedActiveIndex = changedLayers.findKey(l => l === layer) \n    console.log('activeIndex', changedActiveIndex, 'oldIndex', layers.findKey(l => l === layer))\n    this.setState({ activeIndex: changedActiveIndex, layers: changedLayers })\n    changedLayers.forEach((l, index) => {\n      instance.moveTo(l, index)\n    })\n    // instance.renderAll()\n  }\n\n  handleLayerClick = layer => e => {\n    const { layers } = this.state\n    console.log('selected layer:', layer);\n    const activeIndex = layers.findKey(l => l === layer)\n    console.log('key', activeIndex);\n    this.setState({ activeIndex })\n    instance.setActiveObject(layer)\n    instance.renderAll()\n  }\n\n  renderLayers = () => {\n    const { layers, activeIndex } = this.state\n\n    return (\n      <div className=\"layers\">\n        <p>Layers:</p>\n        {layers.map((layer, index) => (\n          <div \n            className={`layer ${activeIndex === index ? 'active' : ''}`} \n            key={layer.name}\n            onClick={this.handleLayerClick(layer)}>\n            <p>\n              {index}: {layer.name}\n            </p>\n          </div>\n        )).reverse()}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"editor\">\n        <button onClick={this.onUploadImage}>Upload Image</button>\n        <input \n          type=\"file\"\n          style={{display: 'none'}} \n          accept=\".jpg,.jpeg,.svg,.png\"\n          onChange={this.onUploaderChange}\n          ref={this.uploaderRef} />\n        <button onClick={this.onAddRectangle}>Add Rect</button>\n\n        <div className=\"main-panel\">\n          <canvas\n            ref={ref => this.canvas = ref}\n            style={{'border': '1px solid #ccc'}}>\n          </canvas>\n\n          <div className=\"right\">\n            <div className=\"layer-actions\">\n              <p>Layer Actions</p>\n              <VerticalAlignTopOutlined onClick={this.handleLayerMovement('top')} />\n              <ArrowUpOutlined onClick={this.handleLayerMovement('up')} />\n              <ArrowDownOutlined onClick={this.handleLayerMovement('down')} />\n              <VerticalAlignBottomOutlined onClick={this.handleLayerMovement('bottom')} />\n            </div>\n            {this.renderLayers()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport Editor from './editor'\nimport './App.css';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Editor></Editor>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}